{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Chipmunk",
  "scopeName": "source.chipmunk",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#symbolic-expressions"
    },
    {
      "include": "#special-forms"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#constants"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "begin": "\\[",
          "end": "\\]",
          "name": "comment.block.chipmunk"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "match": "(nil)",
          "name": "constant.language.nil.chipmunk"
        },
        {
          "match": "(true|false)",
          "name": "constant.language.boolean.chipmunk"
        },
        {
          "match": "-?\\d+(\\.\\d+)?",
          "name": "constant.numeric.chipmunk"
        }
      ]
    },
    "special-forms": {
      "patterns": [
        {
          "match": "(def|if|lambda)",
          "name": "keyword.control.chipmunk"
        },
        {
          "match": "(?<=lambda)\\s+\\((.*?)\\)",
          "captures": {
            "1": {
              "name": "variable.parameter.chipmunk"
            }
          }
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "begin": "\"",
          "end": "\"",
          "name": "string.quoted.double.chipmunk"
        }
      ]
    },
    "symbolic-expressions": {
      "begin": "\\(",
      "end": "\\)",
      "name": "meta.expression.chipmunk",
      "patterns": [
        {
          "include": "#special-forms"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#constants"
        },
        {
          "include": "#symbolic-expressions"
        },
        {
          "match": "(?<=\\()(.+?)(?=\\s|\\))",
          "captures": {
            "1": {
              "name": "entity.name.function.chipmunk"
            }
          }
        }
      ]
    }
  }
}
